#%RAML 1.0
title: User Dataset Upload Service
version: v1.0.0
mediaType: application/json

uses:
  err: .tools/raml/errors.raml
  lib: schema/library.raml

securitySchemes:
  header-auth:
    description: Authentication based on a WDK auth cookie.
    type:
      x-custom
    describedBy:
      headers:
        Auth_Key:
          description: Authorization header.
          type: string

/user-datasets:
  displayName: User Dataset Uploading
  get:
    displayName: All User Dataset Uploads
    description: List user dataset uploads and their statuses
    responses:
      200:
        body:
          type: lib.AllJobResponse
      401:
        body:
          type: err.UnauthorizedError
      500:
        body:
          type: err.ServerError
  post:
    displayName: Start User Dataset Upload
    description: |
      Prepare a new upload process.

      Note: users are limited to one upload process at a time.
    body: lib.PrepRequest
    responses:
      200:
        body:
          type: lib.PrepResponse
      400:
        body:
          type: err.BadRequestError
      401:
        body:
          type: err.UnauthorizedError
      422:
        body:
          type: err.InvalidInputError
      500:
        body:
          type: err.ServerError

  /{processId}:
    uriParameters:
      processId:
        description: |
          ID of the specific upload process for which details should be
          returned.  The user making the request must own the resource or this
          will return 401.
    get:
      description: Shows status information for the job with the given ID
      responses:
        200:
          body:
            type: lib.StatusResponse
        401:
          body:
            type: err.UnauthorizedError
        500:
          body:
            type: err.ServerError
    post:
      description: |
        Upload a dataset package to be processed and made available on the sites
        detailed in the prep request.

        Note: Users are limited to one upload process at a time.
      body:
        application/binary:
          type: file
      responses:
        200:
          body:
            type: lib.ProcessResponse
        400:
          body:
            type: err.BadRequestError
        401:
          body:
            type: err.UnauthorizedError
        422:
          body:
            type: err.InvalidInputError
        500:
          body:
            type: err.ServerError
